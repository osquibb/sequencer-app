{"version":3,"sources":["components/SoundSelector.js","components/Sequencer.js","App.js","serviceWorker.js","index.js"],"names":["SoundSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedSoundIdx","dropDownHover","prevProps","prevState","snapshot","rowIdx","row","handleSoundSelect","soundIdx","setState","_this2","sounds","dropDownSounds","map","sound","idx","react_default","a","createElement","DropdownItem","key","active","onClick","changeSelectedSound","UncontrolledDropdown","size","DropdownToggle","caret","className","onMouseEnter","onMouseLeave","style","backgroundColor","border","color","borderRadius","boxShadow","transition","DropdownMenu","Component","SequencerRow","_ref","activeStep","seqRow","addSound","steps","_ref$isHeader","isHeader","sequencerRow","step","push","id","cursor","scope","SoundSelector_SoundSelector","SequencerTrackRows","sequencerTrackRows","rows","sequencer","rowSeq","Sequencer","isDefaultState","isPlaying","bpm","Array","fill","rowSoundEngine","Howl","src","soundUrls","stopSequencer","bind","assertThisInitialized","clearSequencer","resetSequencer","handleBPMChange","soundEngines","soundUrl","seq","objectSpread","length","alert","concat","toConsumableArray","play","ms","activeStepID","setInterval","clearInterval","resetSeq","event","_event$target$id$spli","target","split","_event$target$id$spli2","slicedToArray","updatedRowSeq","slice","value","_this3","react","Row","Col","Table","playSequencer","addTrack","addStep","xs","type","min","max","onChange","App","modal","toggleModal","Container","Sequencer_Sequencer","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","Button","outline","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56fcdf04.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nexport default class SoundSelector extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n                    selectedSoundIdx: 0,\n                    dropDownHover: false\n                  };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(prevState.selectedSoundIdx !== this.state.selectedSoundIdx){\n      const rowIdx = this.props.row - 1;\n      this.props.handleSoundSelect(rowIdx, this.state.selectedSoundIdx);\n    }\n  }\n\n  changeSelectedSound(rowIdx, soundIdx) {\n    this.setState({selectedSoundIdx: soundIdx});\n    this.props.handleSoundSelect(rowIdx, soundIdx);\n  }\n\n  \n  render() {\n    const sounds = this.props.sounds;\n    const rowIdx = this.props.row - 1;\n\n    const dropDownSounds = sounds.map((sound, idx) => {\n      return(\n      <DropdownItem key={idx}\n                    active={this.state.selectedSoundIdx === idx}\n                    onClick={() => this.changeSelectedSound(rowIdx, idx)}>\n        {sound}\n      </DropdownItem>\n      );\n    });\n\n    return(\n      <UncontrolledDropdown size=\"sm\">\n        <DropdownToggle caret\n                        className={!this.state.dropDownHover ? 'shadow-none': null}\n                        onMouseEnter={() => this.setState(prevState => ({dropDownHover: !prevState.dropDownHover}))}\n                        onMouseLeave={() => this.setState(prevState => ({dropDownHover: !prevState.dropDownHover}))}\n                        style={{backgroundColor: 'white',\n                                border: '1px solid #1A163D',\n                                color: '#1A163D',\n                                borderRadius: '0px',\n                                boxShadow: this.state.dropDownHover ? '3px 3px #1A163D': null,\n                                transition: 'box-shadow 0.2s ease-in-out'\n                              }}>\n          {sounds[this.state.selectedSoundIdx]}\n        </DropdownToggle>\n        <DropdownMenu>\n          {dropDownSounds}\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n  }\n}","import React, { Component, Fragment } from 'react';\nimport { Table, Button, Row, Col, Input } from 'reactstrap';\nimport SoundSelector from './SoundSelector';\nimport { Howl } from 'howler';\n\nfunction SequencerRow({sounds, handleSoundSelect, activeStep, seqRow, addSound, row, steps, isHeader=false}) {\n  // function that builds and returns one sequencer row\n  \n  // initialize empty row array\n  const sequencerRow = [];\n\n  let step = 0\n\n  // if header...\n  if(isHeader) {\n    // first row of header blank with key 'header-none'\n    sequencerRow.push(<th style={{border: '1px solid #1A163D', \n                                  backgroundColor: \"white\"}} \n                          key='header-none' \n                      />);\n\n    // after first row of header, each th displays step num \n    while(step < steps) {\n      sequencerRow.push(<th style={{border: '1px solid #1A163D', \n                                    backgroundColor : step === activeStep ? '#FFFBC7' : 'white'}} \n                            key={'header-' + step+1}\n                        >\n                          {step+1}\n                        </th>);\n      step++;\n    }\n\n    // return the entire header row\n    return (\n      <tr>\n      {sequencerRow}\n      </tr>\n    );\n\n    // if not the header row...\n  } else {\n    while(step < steps) {\n\n      // each td blank.  change color if the associated sequencer array \n      // row step is not null (only the associated 2D row of the sequencer\n      // array is passed in)\n      // addSound(): each cell adds (or removes) an 'x' to the sequencerArray when clicked.\n      // which, in turn, results in a change of the cell color\n      sequencerRow.push(<td key={row+'-'+step}\n                            onClick={addSound}\n                            id={row+'-'+step}\n                            style={{cursor: 'pointer',\n                                    border: '1px solid #1A163D', \n                                    backgroundColor: seqRow[step] !== null ? '#E07D7E' : 'white'\n                                  }}\n                        />);\n      step++;\n    }\n\n    // return row with Track n as the first cell (th), followed\n    // by the sequencer row\n    return(\n      <tr>\n        <th style={{border: '1px solid #1A163D', \n                    backgroundColor: \"white\"}} \n            scope=\"row\" \n        >\n          Track {row}\n          <SoundSelector row={row} sounds={sounds} handleSoundSelect={handleSoundSelect}/>\n        </th>\n        {sequencerRow}\n      </tr>\n    );\n  }\n}\n\nfunction SequencerTrackRows(props) {\n  // function that returns multiple SequencerRows for multiple\n  // tracks\n\n  const sequencerTrackRows = [];\n  let row = 1\n  while(row <= props.rows) {\n    sequencerTrackRows\n    .push(<SequencerRow key={row}\n                        sounds={props.sounds}\n                        handleSoundSelect={props.handleSoundSelect}\n                        activeStep={props.activeStep}\n                        seqRow={props.sequencer[row-1].rowSeq}\n                        addSound={props.addSound}\n                        row={row}\n                        steps={props.steps}/>)\n    row++\n  }\n  return sequencerTrackRows;\n}\n\nexport default class Sequencer extends Component {\n\n  constructor(props) {\n    const rows = 2; // initial num of tracks\n    const steps = 6; // inital num of steps\n\n    super(props);\n    this.state = {\n      isDefaultState: true,\n      isPlaying: false,\n      bpm: 240,\n      activeStep: 0,\n      sequencer: new Array(rows).fill({ rowSeq: new Array(steps).fill(null),\n                                          rowSoundEngine: new Howl({src: [this.props.soundUrls[0]]})\n                                        })\n    };\n\n    this.stopSequencer = this.stopSequencer.bind(this);\n    this.clearSequencer = this.clearSequencer.bind(this);\n    this.resetSequencer = this.resetSequencer.bind(this);\n    this.addSound = this.addSound.bind(this);\n    this.handleSoundSelect = this.handleSoundSelect.bind(this);\n    this.handleBPMChange = this.handleBPMChange.bind(this);\n\n    this.rows = rows;\n    this.steps = steps;\n\n    this.soundEngines = this.props.soundUrls.map(soundUrl => {\n      return(\n        new Howl({src: [soundUrl]})\n      );\n    });\n  };\n\n  addTrack() {\n    const seq = this.state.sequencer.map(row => ({...row}));\n    seq.push(\n              {\n                rowSeq: new Array(seq[0].rowSeq.length).fill(null),\n                rowSoundEngine: null\n              }\n    );\n\n    if(seq.length >= 9) {\n      alert('Maximum Number of Tracks: 8')\n    } else {\n    this.setState({sequencer: seq});\n    }\n  }\n  \n  addStep() {\n    const seq = this.state.sequencer.map(row => ({...row}));\n\n    for(let row in seq) {\n      seq[row].rowSeq = [...seq[row].rowSeq, null];\n    }\n\n    if(seq[0].rowSeq.length >= 17) {\n      alert('Maximum Number of Steps: 16')\n    } else {\n    this.setState({sequencer: seq});\n    }\n  }\n\n  handleSoundSelect(rowIdx, soundIdx) {\n    const seq = this.state.sequencer.map(row => ({...row}));\n    seq[rowIdx].rowSoundEngine = this.soundEngines[soundIdx];\n    this.setState({sequencer: seq});\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(prevState.activeStep !== this.state.activeStep){\n      for(let row in this.state.sequencer){\n        if(this.state.sequencer[row].rowSeq[this.state.activeStep] !== null){\n          if(this.state.sequencer[row].rowSoundEngine !== null){\n            this.state.sequencer[row].rowSoundEngine.play();\n          }\n        }\n      }\n    }\n  }\n\n  playSequencer(bpm) {\n    this.setState({isDefaultState: false});\n    this.setState({isPlaying: true});\n    const steps = this.state.sequencer[0].rowSeq.length;\n    const ms = 60000 / bpm;\n    this.activeStepID = setInterval(\n      () => this.setState(state =>\n            ({activeStep: (state.activeStep + 1)\n            % steps})),\n      ms\n    );\n  }\n\nstopSequencer() {\n  this.setState({isPlaying: false});\n  clearInterval(this.activeStepID);\n}\n\nclearSequencer() {\n  this.setState({isDefaultState: true});\n  this.setState({isPlaying: false});\n  clearInterval(this.activeStepID);\n  this.setState({activeStep: 0});\n\n  const seq = this.state.sequencer.map(row => ({...row}));\n\n  for(let row in seq){\n    seq[row].rowSeq = seq[row].rowSeq.fill(null);\n  }\n\n  this.setState({sequencer: seq});\n}\n\nresetSequencer() {\n  this.setState({isDefaultState: true});\n  this.setState({isPlaying: false});\n  clearInterval(this.activeStepID);\n  this.setState({activeStep: 0});\n  const resetSeq = new Array(this.rows).fill({ \n                                          rowSeq: new Array(this.steps).fill(null),\n                                          rowSoundEngine: new Howl({\n                                                                    src: [this.props.soundUrls[0]]\n                                                                  })\n  })\n  this.setState({sequencer: resetSeq});\n}\n\naddSound(event) {\nconst [row, step] = event.target.id.split('-');\nconst updatedRowSeq = this.state.sequencer[row-1].rowSeq.slice();\nupdatedRowSeq[step] = (updatedRowSeq[step] === null) ? 'x' : null;\n\nconst seq = this.state.sequencer.map(row => ({...row}));\nseq[row-1].rowSeq = updatedRowSeq;\n\nthis.setState({sequencer: seq});\n}\n\ncomponentWillUnmount() {\n  clearInterval(this.activeStepID);\n}\n\nhandleBPMChange(event) {\n  this.setState({bpm: event.target.value});\n}\n\n  render() {\n    const steps = this.state.sequencer[0].rowSeq.length;\n    const rows = this.state.sequencer.length;\n\n    return(\n      <Fragment>\n        <Row>\n          <Col>\n            <Table  \n                   className='mt-3 mb-5'\n                   style={{boxShadow: '4px 4px #1A163D'}}\n            >\n              <thead>\n                <SequencerRow activeStep={this.state.activeStep}\n                              steps={steps}\n                              isHeader={true}/>\n              </thead>\n              <tbody>\n                <SequencerTrackRows activeStep={this.state.activeStep}\n                                    sounds={this.props.sounds}\n                                    handleSoundSelect={this.handleSoundSelect}\n                                    sequencer={this.state.sequencer}\n                                    addSound={this.addSound}\n                                    rows={rows}\n                                    steps={steps} />\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n        <Row className='mb-3'>\n          <Col>\n            <button className=\"mr-3 sequencer-button\" onClick={this.resetSequencer}>Reset</button>\n            <button className=\"ml-3 mr-3 sequencer-button\" onClick={this.clearSequencer}>Clear</button>\n            <button className=\"ml-3 mr-3 sequencer-button text-danger\" onClick={this.stopSequencer}>Stop</button>\n            <button className=\"ml-3 sequencer-button text-success\" onClick={() => this.playSequencer(this.state.bpm)}>Play</button>\n          </Col>\n        </Row>\n        <Row className=\"mb-3\">\n          <Col>\n            <button className='m-3 sequencer-button' onClick={() => this.addTrack()}><i className=\"fa fa-plus-circle\"></i> Tracks</button>\n            <button className={!this.state.isDefaultState ? 'd-none m-3 sequencer-button' : 'm-3 sequencer-button'} onClick={() => this.addStep()}><i className=\"fa fa-plus-circle\"></i> Steps</button>\n          </Col>\n        </Row>\n        <Row className={this.state.isPlaying ? 'd-none' : null}>\n          <Col xs=\"2\">\n            <h5>Bpm</h5>\n          </Col>\n          <Col xs=\"8\" className=\"bpm\">\n            <input className=\"bpm-slider\" type='range' min={60} max={700} value={this.state.bpm} onChange={this.handleBPMChange}/>\n          </Col>\n          <Col xs=\"2\">\n            <h5>{this.state.bpm}</h5>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\n","import React, { Component, Fragment } from 'react';\nimport { Container, Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Sequencer from './components/Sequencer.js';\nimport './App.css';\n\nconst sounds = ['Kick', 'Snare', 'Castanets', 'Cymbals', 'Tambourine', 'Woodblock'];\nconst soundUrls = ['https://osquibb.github.io/public/sounds/kick.mp3',\n                  'https://osquibb.github.io/public/sounds/snare.mp3',\n                  'https://osquibb.github.io/public/sounds/castanets.mp3',\n                  'https://osquibb.github.io/public/sounds/cymbals.mp3',\n                  'https://osquibb.github.io/public/sounds/tambourine.mp3',\n                  'https://osquibb.github.io/public/sounds/woodblock.mp3'];\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({modal: false});\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Container>\n          <Row className=\"text-center mt-4\">\n            <Col>\n              <h2>Step Sequencer</h2>\n            </Col>\n          </Row>\n          <Sequencer sounds={sounds}\n                     soundUrls={soundUrls} \n          />\n        </Container>\n        <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n        <ModalHeader toggle={this.toggle}>How to Play</ModalHeader>\n        <ModalBody>\n          <ol>\n            <li>Click on cells in the sequencer</li>\n            <li>Then press play!</li>\n          </ol>\n          <p>(Hint: Try adding tracks and changing the sounds!)</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"info\" outline onClick={this.toggleModal}>Got it!</Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}